1) Что такое тест-план?
Тест-план — это официальный документ, который описывает цели, объем, подход и деятельность, связанную с тестированием программного обеспечения или системы. 

2)Что должен описывать тест-план?

Основные элементы тест-плана:
1.Цель тестирования — зачем проводится тестирование, каких результатов ожидают и что хотят проверить.
2.Объем тестирования — что именно будет тестироваться (например, функциональные или нефункциональные требования), а что будет исключено.
3.Методология тестирования — какие типы тестов будут использоваться (функциональные, интеграционные, регрессионные и т. д.), а также подход к тестированию (ручное или автоматизированное тестирование).
4.Критерии завершения тестирования — какие условия должны быть выполнены, чтобы тестирование считалось завершенным (например, определённое покрытие тестами или отсутствие критических дефектов).
5.Ресурсы и ответственность — распределение задач между членами команды и ресурсы, которые будут задействованы (включая оборудование, программные средства).
6.График тестирования — расписание проведения тестов, сроки начала и завершения тестирования, а также зависимости от других этапов проекта.
7.Риски и их управление — возможные риски, которые могут повлиять на процесс тестирования (например, нехватка времени или ресурсов), и стратегии для их минимизации.
8.Средства тестирования — инструменты и программное обеспечение, которые будут использоваться для выполнения тестов (например, системы отслеживания ошибок, тестовые фреймворки).
9.Окружение для тестирования — описание инфраструктуры и среды, в которой будет проводиться тестирование (серверы, операционные системы, конфигурации).

3)Какие виды тест-планов?

1.Мастер тест план (project test plan or Master Test Plan)
2.Тест план (Test Plan), или детальный тест план
3.План приемочных испытаний (Product Acceptance Plan) — документ, описывающий набор действий, связанных с приемочным тестированием (стратегия, дата проведения, ответственные работники и т.д.)

Мастер Тест-План (Master Test Plan): “Главный план тестирования (master test plan, project test plan): План тестирования, обычно охватывающий несколько уровней тестирования.” (ISTQB). Это может быть как единственный базовый план, так и главный в иерархии нескольких планов, самый статичный и высокоуровневый. 
Нужен когда:
-продукт имеет множество релизов или итераций, между которыми сохраняется общая информация, которую нет смысла повторять;
-разные тестовые команды работают над одним продуктом, выполняя различные задачи, которые необходимо объединить в рамках одного документа;

Детальный Тест-план (Phase Test plan): Уровневый план тестирования (level test plan): 
Детальный план составляется на каждый релиз/итерацию или для каждой команды в рамках проекта и является динамическим, т.е. может претерпевать изменения по необходимости. 
Его основная цель - кратко и доходчиво отразить задачи тестирования. Детальных планов может быть несколько для отдельных модулей ПО или команд тестирования. Кроме того, могут быть созданы планы для отдельных уровней тестирования (Level Test Plan) или видов тестирования. В Agile проектах могут быть планы итерационного тестирования (iteration testing plans) для каждой итерации;

План приемочных испытаний (Acceptance Test Plan, ПСИ): план приемочного тестирования отличают от обычного плана тестирования факторы, которые приводят к принятию бизнес-решения. План приемочного тестирования - это один из жизненно важных документов, который содержит руководство по выполнению приемочного тестирования для конкретного проекта. Пишется на основе бизнес-требований (Business Requirements). Ревью этого плана обычно выполняется by Managers/Business Analysts/Customers.

4) Что такое чек-лист?

Чек-лист в тестировании - это список проверок, которые необходимо провести для тестирования приложения или его части. 

5) Перечислите возможные атрибуты чек-листа

-Шапка:  содержит информацию о названии приложения, его версии, окружении, на котором проводится тестирование (версия ОС, браузера, эмулятора), ответственного за тестирование, дату тестирования. 
-Тестируемые модули, субмодули: например, регистрация, аутентификация, авторизация.
-Тайтл: должен отражать основную суть, без лишней детализации.
-Уникальный идентификатор проверок для прослеживаемости.
-Статус: информация о статусе прохождения проверки
-Ожидаемый результат:  то, что мы ожидаем увидеть после запуска проверки согласно требованиям
-Типы тестирования: к какому типу относится проверка?
-Отчеты о дефекте: ссылки на отчеты о дефектах для прослеживаемости.
-Заметки/комментарии: если нужно добавить информацию.


6)Перечислите варианты статусов при прохождении чек-листа

-Passed (Пройден) — проверка прошла успешно. Используется, когда тест полностью соответствует ожидаемым результатам.
-Failed (Провален) — проверка провалилась. Это значит, что обнаружены несоответствия между фактическим результатом и ожидаемым.
-Blocked (Заблокирован) — тест не может быть выполнен из-за каких-то внешних причин. Например, недостаток данных, сбои в системе или зависимость от другой задачи, которая не завершена.
-Skipped (Пропущен) — тест был намеренно пропущен. Может быть, проверка нерелевантна для текущей версии, задачи или её выполнение не требуется.
-Not Run (Не выполнен) — тест ещё не был выполнен. Этот статус ставится до того, как проверка началась.
-N/A (Not Applicable, не применимо) означает, что проверка или тест не относится к текущему контексту, сценарию или продукту. 

7) Что такое тест-кейс?

Тест-кейс — это документ, который описывает конкретные шаги, условия и данные для тестирования одной из функциональностей программного обеспечения, а также ожидаемый результат. 

8)Атрибуты тест-кейса

-ID — уникальный идентификатор тест-кейса.
-Название — краткое и понятное описание теста.
-Описание — подробное описание цели тестирования.
-Предусловия — условия, которые должны быть выполнены до начала теста.
-Шаги — последовательность действий для выполнения теста.
-Ожидаемый результат — то, что должно произойти при успешном выполнении теста.
-Фактический результат — реальный результат после выполнения теста.
-Статус — итог теста (Pass/Fail/Blocked).
-Приоритет — важность тест-кейса (высокий, средний, низкий).
-Среда — описание окружения, в котором проводится тестирование (ОС, браузер и т.д.).
-Ответственный — лицо, ответственное за выполнение теста.
-Комментарии — дополнительные заметки или примечания.

9) Виды тест-кейсов

1. Функциональные тест-кейсы
Пример: Проверка успешной регистрации пользователя.
2. Нефункциональные тест-кейсы
Пример: Проверка скорости загрузки страницы при высокой нагрузке.
3. Позитивные тест-кейсы
Направлены на проверку работы системы с корректными и ожидаемыми данными. Эти тест-кейсы проверяют, что система работает в стандартных условиях.
Пример: Ввод корректных данных при авторизации.
4. Негативные тест-кейсы
Проверяют систему на работу с некорректными данными или в неожиданных ситуациях. Цель — убедиться, что система корректно обрабатывает ошибки и не ломается при вводе неправильных данных.
Пример: Попытка входа в систему с неверным паролем.
5. Регрессионные тест-кейсы
Пример: Проверка основных функций после обновления системы.
и т.д.

10) Что такое тестовый набор (Test Suite)

Тестовый набор - это набор тестов/тест-кейсов, собранных по функциональности в последовательность для достижения некоторой цели.

11) Что такое Баг-репорт

Баг-репорт (или отчет о дефекте) — это документ, в котором описывается ошибка или неисправность в программном обеспечении. Он служит для передачи информации команде разработки с целью исправления найденного дефекта.

Какое нужно соблюдать правило в баг-репорте для хорошего Summary
кратко, но емко
без абстрактных\общих фраз
Что\Где\При каких условиях


12) Перечислите атрибуты баг-репорта

-ID или номер дефекта — уникальный идентификатор для отслеживания и управления багом.
-Название — краткое описание проблемы, которое позволяет быстро понять суть дефекта.
-Описание — подробное объяснение проблемы, включая условия ее воспроизведения.
-Шаги для воспроизведения — последовательность действий, которые нужно выполнить, чтобы увидеть ошибку.
-Ожидаемый результат — то, что должно было произойти при правильной работе системы.
-Фактический результат — то, что произошло на самом деле.
-Приоритет и серьезность — оценка важности дефекта (например, высокий, средний, низкий) и его влияния на работу системы.
-Среда — информация о том, в каком окружении (операционная система, браузер, версия ПО) был обнаружен дефект.
-Вложения — скриншоты, логи или другие файлы, которые помогают проиллюстрировать проблему.
-Статус — текущее состояние дефекта (например, новый, в процессе, исправлен, закрыт).

14) Что такое Priority
Priority (приоритет) бага — это оценка важности дефекта и его срочности для исправления.

15) Классификации Priority
ASAP*
High
Medium
Low

16)Что такое Severity 

Severity (серьезность) бага — это оценка уровня воздействия дефекта на функциональность и стабильность системы. Severity определяет, насколько серьезной является ошибка с точки зрения её влияния на работу приложения и пользователя.

17) Классификации Severity
Blocker
Critical
Major
Minor
Trivial

18) Пример Низкого Priority и Высокого Severity

Дефект: На странице оформления заказа в интернет-магазине вместо правильной валюты отображается символ несуществующей валюты (например, "XYZ").
Severity:
Высокий (High): Хотя ошибка визуально серьезна и может вызвать недовольство у пользователей, она не мешает пользователям завершать покупки. Функциональность системы остается рабочей.
Priority:
Низкий (Low): Исправление этой ошибки не требует немедленных действий, так как пользователи все еще могут успешно совершать покупки. Важно, но может быть отложено до следующего обновления.

19) Пример Низкого Severity и Высокого Priority

Дефект: Кнопка "Сохранить" на форме настроек имеет неправильный цвет (например, красный вместо зеленого).
Severity:
Низкий (Low): Ошибка не влияет на функциональность приложения. Кнопка работает правильно, и пользователи могут сохранять настройки без проблем.
Priority:
Высокий (High): Исправление важно, потому что неправильный цвет может ввести пользователей в заблуждение и негативно повлиять на пользовательский опыт. Несмотря на то, что функциональность не нарушена, визуальная проблема требует быстрого внимания.

20) Что такое матрица соответствия требований (Requirements Traceability Matrix)

Матрица соответствия требований (Requirements Traceability Matrix, RTM) — это документ, который связывает требования проекта с тестами, предназначенными для их проверки. Она помогает отслеживать выполнение требований на протяжении всего жизненного цикла разработки, обеспечивая прозрачность и контроль за выполнением.

Использование матрицы соответствия требований является важным аспектом управления проектами, так как помогает обеспечить полное покрытие требований и повышает качество конечного продукта.

21) Что такое тест-отчет?

Тест-отчет — это документ, который суммирует результаты тестирования программного обеспечения. Он содержит информацию о проведенных тестах, обнаруженных дефектах и общем состоянии качества продукта. Тест-отчет предназначен для информирования заинтересованных сторон о ходе тестирования и его результатах.


22)По времени тест-отчет можно разделить на типы
23)Что должен показывать промежуточный отчет
24)Что должен показывать итоговый отчет

1. Ежедневный тест-отчет (Daily Test Report)
Описание: Подготавливается ежедневно во время тестирования. Содержит информацию о том, что было протестировано за день, сколько тестов прошло успешно, сколько провалилось, а также статус обнаруженных дефектов.
Цель: Обеспечить команду и заинтересованные стороны актуальной информацией о ходе тестирования.
2. Промежуточный тест-отчет (Interim Test Report)
Описание: Подготавливается в середине тестирования или по завершении определенного этапа. Включает более детальную информацию о проведенных тестах и статусе проекта.
Цель: Позволить команде оценить текущий прогресс и выявить проблемы на ранней стадии.
3. Итоговый тест-отчет (Final Test Report)
Описание: Подготавливается по завершении всего процесса тестирования. Содержит полную информацию о проведенных тестах, обнаруженных дефектах и общей оценке качества продукта.
Цель: Подвести итоги тестирования и дать рекомендации по дальнейшим действиям, включая решение о выпуске продукта.
4. Специальный тест-отчет (Ad-hoc Test Report)
Описание: Создается по запросу в случае выявления критических дефектов или необходимости дополнительного анализа. Может включать результаты нестандартного тестирования.
Цель: Предоставить актуальную информацию в случае срочных вопросов или изменений.


